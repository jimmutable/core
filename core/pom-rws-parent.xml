<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.rws</groupId>
	<artifactId>rws-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>RWS Parent POM</name>
	<url>https://retailerwebservices.com/</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Integration tests are skipped by default, to enable add -DskipITs=false 
			to the commandline -->
		<skipITs>true</skipITs>
	</properties>

	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>Releases</name>
			<url>http://nexus.rwsgateway.com:8081/repository/maven-releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>Snapshot</name>
			<url>http://nexus.rwsgateway.com:8081/repository/maven-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Note: integration tests are found by the failsafe plugin via the 
				naming convention "IT" at the end of the class, for example "MyIntegrationStuffToRunIT" 
				within src/test/java -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.20.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skipITs>${skipITs}</skipITs>
				</configuration>
			</plugin>
			<!-- Taken from embedded-jetty-uber-jar example https://github.com/jetty-project/embedded-jetty-uber-jar/blob/master/pom.xml -->
			<!-- Use java -jar front_end-0.0.1-SNAPSHOT.jar to run the built jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>rebuild-war</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<artifactSet>
								<includes>
									<include>*:*</include>
								</includes>
							</artifactSet>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/VERSION.txt</exclude>
										<exclude>META-INF/LICENSE.txt</exclude>
									</excludes>
								</filter>
								<!-- exclude the MANIFEST.MF entries that will cause problems -->
								<filter>
									<artifact>javax.annotation:*</artifact>
									<excludes>
										<exclude>META-INF/MANIFEST.MF</exclude>
									</excludes>
								</filter>
								<filter>
									<artifact>javax.servlet:*</artifact>
									<excludes>
										<exclude>META-INF/MANIFEST.MF</exclude>
									</excludes>
								</filter>
								<filter>
									<artifact>org.eclipse.jetty:*</artifact>
									<excludes>
										<exclude>META-INF/MANIFEST.MF</exclude>
									</excludes>
								</filter>
								<filter>
									<artifact>org.ow2.asm:*</artifact>
									<excludes>
										<exclude>META-INF/MANIFEST.MF</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M1</version>
				<executions>
					<execution>
						<id>enforce-java</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[3.5.0,)</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>[1.8,)</version>
									<message>[ERROR] OLD JDK [${java.version}] in use.</message>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
